#include <Arduino.h>

#include <WiFi.h>

#include <HTTPClient.h>
#include <HTTPUpdate.h>


#ifndef APSSID
#define APSSID "bssm_free" //와이파이ID
#define APPSK  "bssm_free"  //와이파이PW
#endif

String ver = "0";
String id = "1";

WiFiClient client;

void setup() {

  Serial.begin(115200);

  for (uint8_t t = 4; t > 0; t--) {
    Serial.printf("[SETUP] WAIT %d...\n", t);
    Serial.flush();
    delay(1000);
  }

  WiFi.mode(WIFI_STA);
  WiFi.begin(APSSID, APPSK);
  //Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("공유기 접속완료");

  Serial.print(id);
  Serial.print("번 보드의 시작 코드입니다!");
  
  httpUpdate.onStart(update_started);
  httpUpdate.onEnd(update_finished);
  httpUpdate.onProgress(update_progress);
  httpUpdate.onError(update_error);

  t_httpUpdate_return ret = httpUpdate.update(client, "http://10.129.55.189:1880/update?id="+id+"&ver="+ver);
  // Or:
  //t_httpUpdate_return ret = httpUpdate.update(client, "server", 80, "/file.bin");

  switch (ret) {
    case HTTP_UPDATE_FAILED:
      //Serial.printf("HTTP_UPDATE_FAILED Error (%d): %s\n", httpUpdate.getLastError(), httpUpdate.getLastErrorString().c_str());
      break;

    case HTTP_UPDATE_NO_UPDATES:
      //Serial.println("HTTP_UPDATE_NO_UPDATES");
      break;

    case HTTP_UPDATE_OK:
      //Serial.println("HTTP_UPDATE_OK");
      break;
  }
}

void update_started() {
  Serial.println("CALLBACK:  HTTP update process started");
}

void update_finished() {
  Serial.println("CALLBACK:  HTTP update process finished");
}

void update_progress(int cur, int total) {
  Serial.printf("CALLBACK:  HTTP update process at %d of %d bytes...\n", cur, total);
}

void update_error(int err) {
  Serial.printf("CALLBACK:  HTTP update fatal error code %d\n", err);
}

void loop() {

}